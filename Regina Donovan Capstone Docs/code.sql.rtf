{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Here's the first-touch query, in case you need it\
*/\
\
/* WITH first_touch AS (\
    SELECT user_id,\
        MIN(timestamp) as first_touch_at\
    FROM page_visits\
    GROUP BY user_id)\
SELECT ft.user_id,\
    ft.first_touch_at,\
    pv.utm_source,\
		pv.utm_campaign\
FROM first_touch ft\
JOIN page_visits pv\
    ON ft.user_id = pv.user_id\
    AND ft.first_touch_at = pv.timestamp;\
    \
    -----------------------------------*/\
    \
/* 1a. Count campaigns*/\
    \
SELECT COUNT(DISTINCT utm_campaign) \
	as 'Campaign Total'\
     FROM page_visits;\
     \
/* 1b. Count sources*/\
    \
SELECT COUNT(DISTINCT utm_source) \
    AS 'Source Total'\
     FROM page_visits;\
     \
 /* 1c. Demonstrate relationship listing sources per campaign*/\
    \
SELECT DISTINCT utm_campaign AS Campaigns,  utm_source AS Sources\
     FROM page_visits; \
     \
 /* 2. List website's unique page name*/\
 \
 SELECT DISTINCT page_name AS 'Page Name'\
 FROM page_visits;\
\
/* 3. Count the first touches for each campaign using first-touch query. \
\
First: Find first touches for each user id.*/\
\
WITH first_touch AS ( \
SELECT user_id, MIN(timestamp) AS first_touch_at \
FROM page_visits\
GROUP BY user_id\
 )   \
 \
/* Second: Add source and campaign to timestamp for each user id from page_visits joining on user id to determine what campaign and source is connected to each user_id's first touch. Display total number of user id's per campaign in descending order. */\
\
 SELECT COUNT (ft.user_id) AS 'First Touch Count', pv.utm_campaign AS 'Campaign', pv.utm_source AS 'Source',ft.first_touch_at AS 'First Touch'\
 FROM first_touch ft\
 JOIN page_visits pv\
 ON ft.user_id = pv.user_id\
 AND ft.first_touch_at = pv.timestamp\
 GROUP BY utm_campaign\
 ORDER BY COUNT (ft.user_id) DESC;\
 \
/* 4. Count the last touches for each campaign using last-touch query. \
\
First: Find last touches for each user id.*/\
\
WITH last_touch AS ( \
SELECT user_id, MAX(timestamp) AS last_touch_at \
FROM page_visits\
GROUP BY user_id\
 )   \
 \
/* Second: Add source and campaign to timestamp for each user id from page_visits joining on user id to determine what campaign and source is connected to each user_id's last touch. Display total number of user id's per campaign in descending order. */\
\
 SELECT COUNT (lt.user_id) AS 'Last Touch Count', pv.utm_campaign AS 'Campaign', pv.utm_source AS 'Source',lt.last_touch_at AS 'Last Touch'\
 FROM last_touch lt\
 JOIN page_visits pv\
 ON lt.user_id = pv.user_id\
 AND lt.last_touch_at = pv.timestamp\
 GROUP BY utm_campaign\
 ORDER BY COUNT (lt.user_id) DESC;\
 \
 /* 5. Count the number of distinct users who made a purchase. */\
 \
 SELECT COUNT (DISTINCT user_id) as 'Visitors Who Became Customers'\
 FROM page_visits\
 WHERE page_name = '4 - purchase';\
 \
 /* 6. Count the last touches for each campaign using last-touch query to determine how many last touches were on the purchase page for each campaign.  \
\
First: Find last touches on the purchase page for each user id.*/\
\
WITH last_touch AS ( \
SELECT user_id, MAX(timestamp) AS last_touch_at \
FROM page_visits\
 WHERE page_name = '4 - purchase'\
GROUP BY user_id\
 )\
 \
/* Second: Add source and campaign to timestamp for each user id from page_visits joining on user id to determine what campaign and source is connected to each user_id's last touch. Display total number of last touches on the purchase page per campaign in descending order. */\
\
SELECT COUNT (lt.user_id) AS 'Last Touch: Purchase Page Count', pv.utm_campaign AS 'Campaign', pv.utm_source AS 'Source',lt.last_touch_at AS 'last Touch'\
 FROM last_touch lt\
 JOIN page_visits pv\
 ON lt.user_id = pv.user_id\
 AND lt.last_touch_at = pv.timestamp\
 GROUP BY utm_campaign\
 ORDER BY COUNT (lt.user_id) DESC;\
 \
 }